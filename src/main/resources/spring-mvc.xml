<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动扫描@Controller注入为bean -->
    <context:component-scan base-package="org.nix.web.controller"/>

    <mvc:interceptors>

        <mvc:interceptor>
            <mvc:mapping path="/**"/> <!--拦截所有请求-->
            <mvc:exclude-mapping path="/login.*"/> <!--登陆页不拦截-->
            <!--修改密码不拦截-->
            <mvc:exclude-mapping path="/register.*"/> <!--注册页不拦截-->
            <mvc:exclude-mapping path="/exception/**/*.*"/> <!--异常处理不拦截-->
            <bean class="org.nix.web.interceptor.SecurityInterceptor">
            </bean>
        </mvc:interceptor>

        <!--拦截所有请求为日志文件加入用户id-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/><!--拦截所有请求 -->
            <bean class="org.nix.web.interceptor.Log4jInterceptor">
            </bean>
        </mvc:interceptor>

    </mvc:interceptors>

    <!-- 以下为SpringMVC配置 -->
    <!-- json支持 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="cacheSeconds" value="0"/>
        <property name="messageConverters">
            <list>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- json视图 -->
    <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView">
        <property name="features">
            <list>
                <!-- 输出key时是否使用双引号 -->
                <value>QuoteFieldNames</value>
                <!-- 是否输出值为null的字段 -->
                <value>WriteMapNullValue</value>
                <!-- List字段如果为null,输出为[],而非null -->
                <value>WriteNullListAsEmpty</value>
                <!-- 字符类型字段如果为null,输出为”“,而非null -->
                <value>WriteNullStringAsEmpty</value>
                <!-- 字符类型字段如果为null,输出为”“,而非null -->
                <value>WriteNullNumberAsZero</value>
            </list>
        </property>
    </bean>

    <!--拦截权限异常-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- <property name="defaultErrorView" value="rediret:/error"></property>   -->
        <property name="exceptionMappings">
            <props>
                <!--权限异常-->
                <prop key="org.nix.exception.AuthorizationException">forward:/exception/system/accessDenied.do</prop>

                <!--用户业务逻辑错误-->
                <!--<prop key="java.lang.NullPointerException">forward:/exception/system/parameterNullException.do</prop>-->
                <prop key="org.nix.exception.AccountNumberException">forward:/exception/user/accountNumberException.do
                </prop>
                <prop key="org.nix.exception.IdentityOverdueException">
                    forward:/exception/user/identityOverdueException.do
                </prop>
                <prop key="org.nix.exception.SelectException">
                    forward:/exception/user/slectException.do
                </prop>


                <!--处理数据库异常-->
                <prop key="org.springframework.dao.DataIntegrityViolationException">
                    forward:/exception/system/dataIntegrityViolationException.do
                </prop>
                <prop key="org.springframework.dao.DataRetrievalFailureException">
                    forward:/exception/system/dataRetrievalFailureException.do
                </prop>
                <prop key="org.springframework.dao.UncategorizedDataAccessException">
                    forward:/exception/system/uncategorizedDataAccessException.do
                </prop>
                <prop key="javax.validation.ConstraintViolationException">
                    forward:/exception/system/constraintViolationException.do
                </prop>


                <!--系统参数异常-->
                <prop key="java.lang.IllegalArgumentException">
                    forward:/exception/system/illegalArgumentException.do
                </prop>
                <prop key="org.springframework.web.method.annotation.MethodArgumentTypeMismatchException">
                    forward:/exception/system/methodArgumentTypeMismatchException.do
                </prop>
                <prop key="org.springframework.web.bind.MissingServletRequestParameterException">
                    forward:/exception/system/missingServletRequestParameterException.do
                </prop>

            </props>
        </property>
    </bean>
    <bean id="aspectPermission" class="org.nix.web.aspect.PermissionAspect"/>

    <!-- 对带有@ValidatePermission和ResponseBody注解的controller包及其子包所有方法执行功能权限校验  -->
    <aop:config proxy-target-class="true">
        <aop:aspect ref="aspectPermission">
            <aop:pointcut id="pc"
                          expression="@annotation(org.nix.annotation.ValidatePermission)
                and @annotation(org.springframework.web.bind.annotation.ResponseBody)
                and execution(* org.nix.web.controller..*.*(..)) "/>
            <aop:before pointcut-ref="pc" method="doBefore"/>
        </aop:aspect>
    </aop:config>


    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>


    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="suffix" value=".html"/>
    </bean>

</beans>